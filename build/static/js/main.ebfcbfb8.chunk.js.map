{"version":3,"sources":["components/Order.js","services/orders/index.js","components/Form.js","App.js","index.js"],"names":["Order","id","creationDate","status","pickup","dropoff","zoneId","pickupLat","pickupLon","dropoffLat","dropoffLon","a","axios","get","data","post","Form","submit","change","newOrder","onSubmit","console","log","name","onChange","e","map","order","value","type","App","useState","orders","setOrders","setNewOrder","errorOrder","setErrorOrder","loadingOrder","setLoading","useEffect","getAllOrders","then","preventDefault","orderToAddToState","uuidv4","Date","toISOString","createOrders","prevOrders","catch","error","target","prevNewOrder","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebfcbfb8.chunk.js","sourcesContent":["const Order = ({ id, creationDate, status, pickup, dropoff, zoneId }) => {\n  let { pickupLat, pickupLon } = pickup\n  let { dropoffLat, dropoffLon } = dropoff\n\n  return (\n    <>\n      <p>{id}</p>\n      <p>{creationDate}</p>\n      <p>{status}</p>\n      <p>{pickupLat}</p>\n      <p>{pickupLon}</p>\n      <p>{dropoffLat}</p>\n      <p>{dropoffLon}</p>\n      <p>{zoneId}</p>\n    </>\n  )\n}\n\nexport default Order;","import axios from 'axios'\n\nexport async function getAllOrders() {\n  const { data } = await axios.get('https://kiwibot-challenge-25486.firebaseapp.com/')\n  return data\n}\n\nexport async function createOrders({ id, creationDate, status, pickup, dropoff, zoneId }) {\n  let { pickupLat, pickupLon } = pickup\n  let { dropoffLat, dropoffLon } = dropoff\n  const { data } = await axios.post('https://kiwibot-challenge-25486.firebaseapp.com/api/delivery_orders', { id, creationDate, status, pickupLat, pickupLon, dropoffLat, dropoffLon, zoneId })\n  return data\n}","const Form = ({ submit, change, newOrder }) => {\n  return (\n    <form onSubmit={submit}>\n\n      {console.log(newOrder.status)}\n      <select name='status' onChange={e => change(e)}>\n        {\n          newOrder.status.map((order) => <option key={order} value={order}>{order}</option>)\n        })\n      </select>\n\n      <div>\n        <label>Ingresa la latitud de retiro:\n          <input type='number' name='pickupLat' onChange={change} value={newOrder.pickupLat} />\n        </label>\n      </div>\n\n      <div>\n        <label>Ingresa la longitud de retiro:\n          <input type='number' name='pickupLon' onChange={change} value={newOrder.pickupLon}  />\n        </label>\n      </div>\n\n      <div>\n        <label>Ingresa la latitud de entrega:\n          <input type='number' name='dropoffLat' onChange={change} value={newOrder.dropoffLat}  />\n        </label>\n      </div>\n\n      <div>\n        <label>Ingresa la longitud de entrega:\n          <input type='number' name='dropoffLon' onChange={change} value={newOrder.dropoffLon}  />\n        </label>\n      </div>\n\n      <div>\n        <label>Ingresa el id de la zona:\n          <input type='text' name='zoneId' onChange={change} value={newOrder.zoneId} />\n        </label>\n      </div>\n\n      <button>Crear orden</button>\n    </form>\n  )\n}\n\nexport default Form;","import { useState, useEffect } from 'react';\nimport Order from './components/Order'\nimport { getAllOrders, createOrders } from './services/orders/index'\nimport Form from './components/Form';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst App = () => {\n\n  const [orders, setOrders] = useState([])\n  const [newOrder, setNewOrder] = useState({\n    status: ['Pendiente', 'Asignado', 'En trÃ¡nsito', 'Entregado'],\n    pickupLat: 0,\n    pickupLon: 0,\n    dropoffLat: 0,\n    dropoffLon: 0,\n    zoneId: \"\"\n  })\n  const [errorOrder, setErrorOrder] = useState('')\n  const [loadingOrder, setLoading ] = useState(false);\n\n  useEffect(() => {\n    getAllOrders().then(orders => {\n      setOrders(orders);\n    })\n  }, []);\n\n\n  const handleChange = (e) => {\n    const value = e.target.value\n    setNewOrder(prevNewOrder => ({...prevNewOrder, [e.target.name]: value}))\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true)\n    \n    const orderToAddToState = {\n      id: uuidv4(),\n      creationDate: new Date().toISOString(),\n      status: newOrder.status,\n      pickup: {\n        pickupLat: newOrder.pickupLat,\n        pickupLon: newOrder.pickupLon\n      },\n      dropoff: {\n        dropoffLat: newOrder.dropoffLat,\n        dropoffLon: newOrder.dropoffLon\n      },\n      zoneId: newOrder.zoneId\n    }\n\n    setErrorOrder('');\n\n    createOrders(orderToAddToState).then(newOrder => {\n      setOrders((prevOrders) => [...prevOrders, newOrder])\n      setLoading(false);\n    }).catch((error) => {\n      setLoading(false);\n      console.error(error);\n      setErrorOrder(\"Something got wrong!\")\n    })\n\n    setNewOrder('')\n  }\n  \n  if (errorOrder) return <span>Error</span>\n  return (\n    <>\n      <h1>Ordenes</h1>\n      {console.log(...orders)}\n      <ol>\n        {orders.map((order) => <Order key={order.id} {...order} /> )}\n      </ol>\n\n      { loadingOrder && \"Cargando...\" }\n      <Form submit={handleSubmit} change={handleChange} newOrder={newOrder} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBjRpYvRMoS8ybXfrVr7BTUV_177gThRNQ\",\n  authDomain: \"kiwi-front-d207a.firebaseapp.com\",\n  projectId: \"kiwi-front-d207a\",\n  storageBucket: \"kiwi-front-d207a.appspot.com\",\n  messagingSenderId: \"396640241344\",\n  appId: \"1:396640241344:web:33f567a3bca47df1028f25\",\n  measurementId: \"G-193SJF3DDC\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}